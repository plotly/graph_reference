{"plotlylist": {}, "data": {}, "annotations": {}, "plotlydict": {}, "plotlytrace": {}, "trace": {"x": {}, "y": {}, "z": {}, "r": {}, "t": {}, "text": {}, "name": {}, "mode": {}, "marker": {"type": "object"}, "line": {"type": "object"}, "fill": {}, "fillcolor": {}, "opacity": {}, "showlegend": {}, "xaxis": {}, "yaxis": {}, "angularAxis": {}, "radialAxis": {}, "error_y": {"type": "object"}, "textfont": {"type": "object"}, "type": {}, "bardir": {}, "boxpoints": {}, "jitter": {}, "pointpos": {}, "boxmean": {}, "whiskerwidth": {}, "scl": {}, "colorbar": {"type": "object"}, "autobinx": {}, "autobiny": {}, "xbins": {"type": "object"}, "ybins": {"type": "object"}, "histnorm": {}, "zmax": {}, "zmin": {}, "dx": {}, "dy": {}, "x0": {}, "y0": {}, "zauto": {}, "hm_id": {}, "nbinsx": {}, "nbinsy": {}}, "scatter": {"x": {"val_types": "array_like of numbers, strings, datetimes", "required": true, "type": "data", "description": "the x coordinates from the (x,y) pair on the scatter plot."}, "y": {"val_types": "array_like of numbers, strings, datetimes", "required": true, "type": "data", "description": "the y coordinatey from the (x,y) pair on the scatter plot."}, "r": {"val_types": "array_like of numbers, strings, datetimes", "required": false, "type": "data"}, "t": {"val_types": "array_like of numbers, strings, datetimes", "required": false, "type": "data"}, "text": {"val_types": "array_like of strings", "required": false, "type": "data", "description": "The text elements associated with every (x,y) pair on the scatter plot. If the scatter 'mode' doesn't include 'text' then text will appear on hover."}, "name": {"val_types": "string", "required": false, "type": "data", "description": "The label associated with this trace. This name will appear in the legend, in the column header in the spreadsheet, and on hover."}, "mode": {"val_types": "'lines' | 'markers' | 'text' | 'lines+markers' | 'lines+text' | 'markers+text' | 'lines+markers+text'", "required": false, "type": "plot_info", "description": "Plotting mode (style) for the scatter plot. If the mode includes 'text' then the 'text' will appear next to the (x,y) points, otherwise it will appear on hover."}, "marker": {"val_types": "dictionary-like", "required": false, "type": "object", "description": "A dictionary-like object containing information about the marker style of the scatter plot."}, "line": {"val_types": "dictionary-like", "required": false, "type": "object", "description": "A dictionary-like object containing information about the line connecting points on the scatter plot."}, "fill": {"default": "none", "val_types": "'none' | 'tozeroy' | 'tonexty' | 'tozerox' | 'tonextx", "required": false, "type": "style", "description": "Used to make area-style charts. Determines which area to fill with a solid color."}, "fillcolor": {"val_types": "str describing color", "required": false, "type": "style", "examples": ["'green'", "'rgb(0, 255, 0)'", "'rgba(0, 255, 0, 0.3)'", "'hsl(120,100%,50%)'", "'hsla(120,100%,50%,0.3)'"]}, "opacity": {"val_types": "number: x in [0, 1]", "required": false, "type": "style", "description": "Sets the opacity, or transparency, of this object. Also known as the alpha channel of colors, if the object's color is given in terms of 'rgba', this does not need to be defined."}, "showlegend": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Toggle whether or not this trace will show up in the legend."}, "stream": {"val_types": "dictionary-like", "required": false, "type": "plot_info", "description": "The stream dict that initializes traces as writable-streams, for use with the real-time streaming API. See examples here:\nhttp://nbviewer.ipython.org/github/plotly/Streaming-Demos"}, "xaxis": {"val_types": "string: 'x1' | 'x2' | 'x3' | etc.", "required": false, "type": "plot_info", "description": "This key determines which xaxis the x coordinates in this trace will reference in the figure. 'x' references layout['xaxis'] and 'x2' references layout['xaxis2']. 'x1' will always refer to layout['xaxis'] or layout['xaxis1'], they are the same."}, "yaxis": {"val_types": "string: 'y1' | 'y2' | 'y3' | etc.", "required": false, "type": "plot_info", "description": "This key determines which yaxis the y coordinates in this trace will reference in the figure. 'y' references layout['yaxis'] and 'y2' references layout['yaxis2']. 'y1' will always refer to layout['yaxis'] or layout['yaxis1'], they are the same."}, "error_y": {"val_types": "dictionary-like", "required": false, "type": "object", "description": "A dictionary-like object describing vertical error bars that can be drawn with this trace's (x, y) points."}, "visible": {"val_types": "bool: True | False", "required": false, "type": "plot_info", "description": "Toggles whether this will actually be visible in the rendered figure."}, "textfont": {"required": false, "type": "object", "description": "A dictionary-like object describing the font style of this scatter's text elements."}, "type": {"val_types": "'scatter'", "required": false, "type": "plot_info", "description": "Plotly identifier for this data's trace type. This defines how this data dictionary will be handled."}}, "bar": {"x": {"val_types": "array_like of numbers, strings, datetimes OR array_like of strings", "required": true, "type": "data", "description": "The x coordinates of the bars or the bar chart's categories."}, "y": {"val_types": "array_like of numbers, strings, datetimes OR array_like of strings", "required": true, "type": "data", "description": "The y coordinates of the bars or the bar chart's categories."}, "bardir": {"val_types": "'v' | 'h'", "required": false, "type": "style", "description": "This defines the orientation (direction) of the bars. If set to 'h', the bars run horizontally along the xaxis. If set to 'v', the bars run vertically along the 'y' axis. However, you do not need to change 'x' and 'y' arrays as 'x' always defines the location of the bars (or category) and 'y' always defines the height of the bars."}, "text": {}, "name": {"val_types": "string", "required": false, "type": "data", "description": "The label associated with this trace. This name will appear in the legend, in the column header in the spreadsheet, and on hover."}, "marker": {"val_types": "dictionary-like", "required": false, "type": "object"}, "line": {"val_types": "dictionary-like", "required": false, "type": "object", "description": "A dictionary-like object containing information about the enclosing line for each bar."}, "opacity": {"val_types": "number: x in [0, 1]", "required": false, "type": "style", "description": "Sets the opacity, or transparency, of this object. Also known as the alpha channel of colors, if the object's color is given in terms of 'rgba', this does not need to be defined."}, "showlegend": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Toggle whether or not this trace will show up in the legend."}, "stream": {"val_types": "dictionary-like", "required": false, "type": "plot_info", "description": "The stream dict that initializes traces as writable-streams, for use with the real-time streaming API. See examples here:\nhttp://nbviewer.ipython.org/github/plotly/Streaming-Demos"}, "xaxis": {"val_types": "string: 'x1' | 'x2' | 'x3' | etc.", "required": false, "type": "plot_info", "description": "This key determines which xaxis the x coordinates in this trace will reference in the figure. 'x' references layout['xaxis'] and 'x2' references layout['xaxis2']. 'x1' will always refer to layout['xaxis'] or layout['xaxis1'], they are the same."}, "yaxis": {"val_types": "string: 'y1' | 'y2' | 'y3' | etc.", "required": false, "type": "plot_info", "description": "This key determines which yaxis the y coordinates in this trace will reference in the figure. 'y' references layout['yaxis'] and 'y2' references layout['yaxis2']. 'y1' will always refer to layout['yaxis'] or layout['yaxis1'], they are the same."}, "error_y": {"val_types": "dictionary-like", "required": false, "type": "object", "description": "A dictionary-like object describing vertical error bars that can be drawn with this trace's (x, y) points."}, "textfont": {"type": "object"}, "visible": {"val_types": "bool: True | False", "required": false, "type": "plot_info", "description": "Toggles whether this will actually be visible in the rendered figure."}, "type": {"val_types": "'bar'", "required": true, "type": "plot_info", "description": "Plotly identifier for this data's trace type. This defines how this data dictionary will be handled."}}, "box": {"y": {"val_types": "array_like of numbers, strings, datetimes", "required": true, "type": "data", "description": "This array is used to define the an individual box plot. Statistics from these numbers define the bounds of the box, the length of the whiskers, etc."}, "name": {"val_types": "string", "required": false, "type": "data", "description": "The label associated with this trace. This name will appear in the legend, in the column header in the spreadsheet, and on hover."}, "boxpoints": {"default": false, "val_types": "'all' | 'outliers' | False", "required": false, "type": "plot_info", "description": "If 'all' then the 'y' points are shown with the box. If 'outliers' then only the 'outliers' of the 'y' points are shown. If False then no points are shown"}, "jitter": {"val_types": "number in [0, 1]", "required": false, "type": "style", "description": "Width of the jittered scatter. If 0, then the boxpoints are aligned vertically, if 1 then the points are randomly jittered horizontally up to the width of the box."}, "pointpos": {"val_types": "number in [-2, 2]", "required": false, "type": "style", "description": "Horizontal position of the center of the boxpoints relative to the center and width of the box."}, "boxmean": {"default": "False", "required": false, "type": "False | True | 'sd'", "description": "If True then the mean of the y-points is shown as a dashed line in the box. If 'sd', then the standard deviation is also shown. If False, then no line shown."}, "whiskerwidth": {"default": 0.75, "required": false, "type": "number in [0, 1]", "description": "Width of the whisker of the box."}, "fillcolor": {"val_types": "str describing color", "required": false, "type": "style", "examples": ["'green'", "'rgb(0, 255, 0)'", "'rgba(0, 255, 0, 0.3)'", "'hsl(120,100%,50%)'", "'hsla(120,100%,50%,0.3)'"], "description": "Color of the box interior."}, "marker": {"type": "object"}, "line": {"type": "object"}, "textfont": {"type": "object"}, "showlegend": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Toggle whether or not this trace will show up in the legend."}, "stream": {"val_types": "dictionary-like", "required": false, "type": "plot_info", "description": "The stream dict that initializes traces as writable-streams, for use with the real-time streaming API. See examples here:\nhttp://nbviewer.ipython.org/github/plotly/Streaming-Demos"}, "xaxis": {"val_types": "string: 'y1' | 'y2' | 'y3' | etc.", "required": false, "type": "plot_info", "description": "This key determines which yaxis the y coordinates in this trace will reference in the figure. 'y' references layout['yaxis'] and 'y2' references layout['yaxis2']. 'y1' will always refer to layout['yaxis'] or layout['yaxis1'], they are the same."}, "visible": {"val_types": "bool: True | False", "required": false, "type": "plot_info", "description": "Toggles whether this will actually be visible in the rendered figure."}, "error_y": {"val_types": "dictionary-like", "required": false, "type": "object", "description": "A dictionary-like object describing vertical error bars that can be drawn with this trace's (x, y) points."}, "type": {"val_types": "box", "required": true, "type": "plot_info", "description": "Plotly identifier for this data's trace type. This defines how this data dictionary will be handled."}}, "contour": {"z": {"val_types": "matrix-like: list of lists, numpy.matrix", "required": true, "type": "data", "description": "The data that describes the heatmap. The dimensions of the 'z' matrix are (nxm) where there are 'n' COLUMNS defining the number of partitions along the x-axis; this is equal to the length of the 'x' array. There are 'm' ROWS defining the number of partitions along the y-axis; this is equal to the length of the 'y' array. Therefore, the color of the cell z[i][j] is mapped to the ith partition of the y-axis (starting from the bottom of the plot) and the jth partition of the x-axis (starting from the left of the plot)."}, "x": {"val_types": "array_like of numbers, strings, datetimes", "required": false, "type": "data", "description": "This array-like value contains the HORIZONTAL labels referring to the COLUMNS of the 'z' matrix. If strings, the x-labels are spaced evenly."}, "y": {"val_types": "array_like of numbers, strings, datetimes", "required": false, "type": "data", "description": "This array-like value contains the VERTICAL labels referring to the ROWS of the 'z' matrix. If strings, the y-labels are spaced evenly."}, "name": {"val_types": "string", "required": false, "type": "data", "description": "The label associated with this trace. This name will appear in the legend, in the column header in the spreadsheet, and on hover."}, "autocontour": {"default": true, "val_types": "bool: True | False", "required": false, "type": "style", "description": "If True, the contours settings are set automatically. If False, the contours settings must be set manually with the contours object."}, "ncontours": {"default": 0, "val_types": "bool: True | False", "required": false, "type": "style"}, "contours": {"val_types": "dictionary-like", "required": false, "type": "object"}, "scl": {"val_types": "array_like of value-color pairs | 'Greys' | 'Greens' | 'Bluered' | 'Hot' | 'Picnic' | 'Portland' | 'Jet' | 'RdBu' | 'Blackbody' | 'Earth' | 'Electric' | 'YIOrRd' | 'YIGnBu'", "required": false, "type": "style", "examples": ["Greys", [[0, "rgb(0,0,0)"], [1, "rgb(255,255,255)"]], [[0, "rgb(8, 29, 88)"], [0.125, "rgb(37, 52, 148)"], [0.25, "rgb(34, 94, 168)"], [0.375, "rgb(29, 145, 192)"], [0.5, "rgb(65, 182, 196)"], [0.625, "rgb(127, 205, 187)"], [0.75, "rgb(199, 233, 180)"], [0.875, "rgb(237, 248, 217)"], [1, "rgb(255, 255, 217)"]]], "description": "The color scale. The strings are pre-defined color scales. For custom color scales, define a list of color-value pairs, where the first element of the pair corresponds to a normalized value of z from 0-1  (i.e. (z-zmin)/(zmax-zmin)), and the second element of pair corresponds to a color."}, "colorbar": {"val_types": "dictionary-like", "required": false, "type": "object", "description": "This object represents a colorbar that will be shown on the figure where the color is related to the data being shown."}, "xtype": {"val_types": "'array' | 'scaled'", "required": false, "type": "style"}, "ytype": {"val_types": "'array' | 'scaled'", "required": false, "type": "style"}, "dx": {"val_types": "number", "required": false, "type": "style"}, "dy": {"val_types": "number", "required": false, "type": "style"}, "zmin": {"val_types": "number", "required": false, "type": "style", "description": "The value used as the minimum in the color scale normalization in 'scl'. The default is the minimum of the 'z' data values."}, "zmax": {"val_types": "number", "required": false, "type": "style", "description": "The value used as the maximum in the color scale normalization in 'scl'. The default is the minimum of the 'z' data values."}, "showlegend": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Toggle whether or not this trace will show up in the legend."}, "stream": {"val_types": "dictionary-like", "required": false, "type": "plot_info", "description": "The stream dict that initializes traces as writable-streams, for use with the real-time streaming API. See examples here:\nhttp://nbviewer.ipython.org/github/plotly/Streaming-Demos"}, "xaxis": {"val_types": "string: 'x1' | 'x2' | 'x3' | etc.", "required": false, "type": "plot_info", "description": "This key determines which xaxis the x coordinates in this trace will reference in the figure. 'x' references layout['xaxis'] and 'x2' references layout['xaxis2']. 'x1' will always refer to layout['xaxis'] or layout['xaxis1'], they are the same."}, "yaxis": {"val_types": "string: 'y1' | 'y2' | 'y3' | etc.", "required": false, "type": "plot_info", "description": "This key determines which yaxis the y coordinates in this trace will reference in the figure. 'y' references layout['yaxis'] and 'y2' references layout['yaxis2']. 'y1' will always refer to layout['yaxis'] or layout['yaxis1'], they are the same."}, "visible": {"val_types": "bool: True | False", "required": false, "type": "plot_info", "description": "Toggles whether this will actually be visible in the rendered figure."}, "type": {"val_types": "contour", "required": true, "type": "plot_info", "description": "Plotly identifier for this data's trace type. This defines how this data dictionary will be handled."}}, "heatmap": {"z": {"val_types": "matrix-like: list of lists, numpy.matrix", "required": true, "type": "data", "description": "The data that describes the heatmap. The dimensions of the 'z' matrix are (nxm) where there are 'n' COLUMNS defining the number of partitions along the x-axis; this is equal to the length of the 'x' array. There are 'm' ROWS defining the number of partitions along the y-axis; this is equal to the length of the 'y' array. Therefore, the color of the cell z[i][j] is mapped to the ith partition of the y-axis (starting from the bottom of the plot) and the jth partition of the x-axis (starting from the left of the plot)."}, "x": {"val_types": "array_like of numbers, strings, datetimes", "required": false, "type": "data", "description": "This array-like value contains the HORIZONTAL labels referring to the COLUMNS of the 'z' matrix. If strings, the x-labels are spaced evenly."}, "y": {"val_types": "array_like of numbers, strings, datetimes", "required": false, "type": "data", "description": "This array-like value contains the VERTICAL labels referring to the ROWS of the 'z' matrix. If strings, the y-labels are spaced evenly."}, "name": {"val_types": "string", "required": false, "type": "data", "description": "The label associated with this trace. This name will appear in the legend, in the column header in the spreadsheet, and on hover."}, "scl": {"val_types": "array_like of value-color pairs | 'Greys' | 'Greens' | 'Bluered' | 'Hot' | 'Picnic' | 'Portland' | 'Jet' | 'RdBu' | 'Blackbody' | 'Earth' | 'Electric' | 'YIOrRd' | 'YIGnBu'", "required": false, "type": "style", "examples": ["Greys", [[0, "rgb(0,0,0)"], [1, "rgb(255,255,255)"]], [[0, "rgb(8, 29, 88)"], [0.125, "rgb(37, 52, 148)"], [0.25, "rgb(34, 94, 168)"], [0.375, "rgb(29, 145, 192)"], [0.5, "rgb(65, 182, 196)"], [0.625, "rgb(127, 205, 187)"], [0.75, "rgb(199, 233, 180)"], [0.875, "rgb(237, 248, 217)"], [1, "rgb(255, 255, 217)"]]], "description": "The color scale. The strings are pre-defined color scales. For custom color scales, define a list of color-value pairs, where the first element of the pair corresponds to a normalized value of z from 0-1  (i.e. (z-zmin)/(zmax-zmin)), and the second element of pair corresponds to a color."}, "colorbar": {"val_types": "dictionary-like", "required": false, "type": "object", "description": "This object represents a colorbar that will be shown on the figure where the color is related to the data being shown."}, "xtype": {"val_types": "'array' | 'scaled'", "required": false, "type": "style"}, "ytype": {"val_types": "'array' | 'scaled'", "required": false, "type": "style"}, "dx": {"val_types": "number", "required": false, "type": "style"}, "dy": {"val_types": "number", "required": false, "type": "style"}, "zmin": {"val_types": "number", "required": false, "type": "style", "description": "The value used as the minimum in the color scale normalization in 'scl'. The default is the minimum of the 'z' data values."}, "zmax": {"val_types": "number", "required": false, "type": "style", "description": "The value used as the maximum in the color scale normalization in 'scl'. The default is the minimum of the 'z' data values."}, "showlegend": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Toggle whether or not this trace will show up in the legend."}, "stream": {"val_types": "dictionary-like", "required": false, "type": "plot_info", "description": "The stream dict that initializes traces as writable-streams, for use with the real-time streaming API. See examples here:\nhttp://nbviewer.ipython.org/github/plotly/Streaming-Demos"}, "xaxis": {"val_types": "string: 'x1' | 'x2' | 'x3' | etc.", "required": false, "type": "plot_info", "description": "This key determines which xaxis the x coordinates in this trace will reference in the figure. 'x' references layout['xaxis'] and 'x2' references layout['xaxis2']. 'x1' will always refer to layout['xaxis'] or layout['xaxis1'], they are the same."}, "yaxis": {"val_types": "string: 'y1' | 'y2' | 'y3' | etc.", "required": false, "type": "plot_info", "description": "This key determines which yaxis the y coordinates in this trace will reference in the figure. 'y' references layout['yaxis'] and 'y2' references layout['yaxis2']. 'y1' will always refer to layout['yaxis'] or layout['yaxis1'], they are the same."}, "visible": {"val_types": "bool: True | False", "required": false, "type": "plot_info", "description": "Toggles whether this will actually be visible in the rendered figure."}, "type": {"val_types": "heatmap", "required": true, "type": "plot_info", "description": "Plotly identifier for this data's trace type. This defines how this data dictionary will be handled."}}, "histogramx": {"x": {"val_types": "array_like of numbers, strings, datetimes", "required": true, "type": "data", "description": "The x data that is binned and plotted as bars along the x-axis."}, "name": {"val_types": "string", "required": false, "type": "data", "description": "The label associated with this trace. This name will appear in the legend, in the column header in the spreadsheet, and on hover."}, "mode": {}, "marker": {"val_types": "dictionary-like", "required": false, "type": "object"}, "line": {"val_types": "dictionary-like", "required": false, "type": "object"}, "autobinx": {"val_types": "bool: True | False", "required": false, "type": "plot_info", "description": "Toggle whether or not to allow plotly to automatically pick the bin sizing in the x direction for this histogram."}, "xbins": {"val_types": "dictionary-like", "required": false, "type": "object", "description": "A dictionary-like object explaining how the bins should be created in the x direction for this histogram."}, "nbinsx": {}, "histnorm": {}, "showlegend": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Toggle whether or not this trace will show up in the legend."}, "xaxis": {"val_types": "string: 'x1' | 'x2' | 'x3' | etc.", "required": false, "type": "plot_info", "description": "This key determines which xaxis the x coordinates in this trace will reference in the figure. 'x' references layout['xaxis'] and 'x2' references layout['xaxis2']. 'x1' will always refer to layout['xaxis'] or layout['xaxis1'], they are the same."}, "yaxis": {"val_types": "string: 'y1' | 'y2' | 'y3' | etc.", "required": false, "type": "plot_info", "description": "This key determines which yaxis the y coordinates in this trace will reference in the figure. 'y' references layout['yaxis'] and 'y2' references layout['yaxis2']. 'y1' will always refer to layout['yaxis'] or layout['yaxis1'], they are the same."}, "visible": {"val_types": "bool: True | False", "required": false, "type": "plot_info", "description": "Toggles whether this will actually be visible in the rendered figure."}, "stream": {"val_types": "dictionary-like", "required": false, "type": "plot_info", "description": "The stream dict that initializes traces as writable-streams, for use with the real-time streaming API. See examples here:\nhttp://nbviewer.ipython.org/github/plotly/Streaming-Demos"}, "type": {"val_types": "histogramx", "required": true, "type": "plot_info", "description": "Plotly identifier for this data's trace type. This defines how this data dictionary will be handled."}, "y": {}, "error_y": {}, "textfont": {}}, "histogramy": {"y": {"val_types": "array_like of numbers, strings, datetimes", "required": true, "type": "data", "description": "The y data that is binned and plotted as bars along the y-axis."}, "name": {"val_types": "string", "required": false, "type": "data", "description": "The label associated with this trace. This name will appear in the legend, in the column header in the spreadsheet, and on hover."}, "mode": {}, "marker": {"val_types": "dictionary-like", "required": false, "type": "object"}, "line": {"val_types": "dictionary-like", "required": false, "type": "object"}, "autobiny": {"val_types": "bool: True | False", "required": false, "type": "plot_info", "description": "Toggle whether or not to allow plotly to automatically pick the bin sizing in the y direction for this histogram."}, "ybins": {"val_types": "dictionary-like", "required": false, "type": "object", "description": "A dictionary-like object explaining how the bins should be created in the x direction for this histogram."}, "nbinsy": {}, "histnorm": {}, "showlegend": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Toggle whether or not this trace will show up in the legend."}, "xaxis": {"val_types": "string: 'x1' | 'x2' | 'x3' | etc.", "required": false, "type": "plot_info", "description": "This key determines which xaxis the x coordinates in this trace will reference in the figure. 'x' references layout['xaxis'] and 'x2' references layout['xaxis2']. 'x1' will always refer to layout['xaxis'] or layout['xaxis1'], they are the same."}, "yaxis": {"val_types": "string: 'y1' | 'y2' | 'y3' | etc.", "required": false, "type": "plot_info", "description": "This key determines which yaxis the y coordinates in this trace will reference in the figure. 'y' references layout['yaxis'] and 'y2' references layout['yaxis2']. 'y1' will always refer to layout['yaxis'] or layout['yaxis1'], they are the same."}, "visible": {"val_types": "bool: True | False", "required": false, "type": "plot_info", "description": "Toggles whether this will actually be visible in the rendered figure."}, "stream": {"val_types": "dictionary-like", "required": false, "type": "plot_info", "description": "The stream dict that initializes traces as writable-streams, for use with the real-time streaming API. See examples here:\nhttp://nbviewer.ipython.org/github/plotly/Streaming-Demos"}, "type": {"val_types": "histogramy", "required": true, "type": "plot_info", "description": "Plotly identifier for this data's trace type. This defines how this data dictionary will be handled."}, "x": {}, "error_y": {}, "textfont": {}}, "histogram2d": {"x": {"val_types": "array_like of numbers, strings, datetimes", "required": true, "type": "data", "description": "The x data that is binned and plotted as bars along the x-axis."}, "y": {"val_types": "array_like of numbers, strings, datetimes", "required": true, "type": "data", "description": "The y data that is binned and plotted as bars along the y-axis."}, "scl": {"val_types": "array_like of value-color pairs | 'Greys' | 'Greens' | 'Bluered' | 'Hot' | 'Picnic' | 'Portland' | 'Jet' | 'RdBu' | 'Blackbody' | 'Earth' | 'Electric' | 'YIOrRd' | 'YIGnBu'", "required": false, "type": "style", "examples": ["Greys", [[0, "rgb(0,0,0)"], [1, "rgb(255,255,255)"]], [[0, "rgb(8, 29, 88)"], [0.125, "rgb(37, 52, 148)"], [0.25, "rgb(34, 94, 168)"], [0.375, "rgb(29, 145, 192)"], [0.5, "rgb(65, 182, 196)"], [0.625, "rgb(127, 205, 187)"], [0.75, "rgb(199, 233, 180)"], [0.875, "rgb(237, 248, 217)"], [1, "rgb(255, 255, 217)"]]], "description": "The color scale. The strings are pre-defined color scales. For custom color scales, define a list of color-value pairs, where the first element of the pair corresponds to a normalized value of z from 0-1  (i.e. (z-zmin)/(zmax-zmin)), and the second element of pair corresponds to a color."}, "colorbar": {"val_types": "dictionary-like", "required": false, "type": "object", "description": "This object represents a colorbar that will be shown on the figure where the color is related to the data being shown."}, "name": {"val_types": "string", "required": false, "type": "data", "description": "The label associated with this trace. This name will appear in the legend, in the column header in the spreadsheet, and on hover."}, "mode": {}, "marker": {"val_types": "dictionary-like", "required": false, "type": "object"}, "line": {"val_types": "dictionary-like", "required": false, "type": "object"}, "autobinx": {"val_types": "bool: True | False", "required": false, "type": "plot_info", "description": "Toggle whether or not to allow plotly to automatically pick the bin sizing in the x direction for this histogram."}, "autobiny": {"val_types": "bool: True | False", "required": false, "type": "plot_info", "description": "Toggle whether or not to allow plotly to automatically pick the bin sizing in the y direction for this histogram."}, "xbins": {"val_types": "dictionary-like", "required": false, "type": "object", "description": "A dictionary-like object explaining how the bins should be created in the x direction for this histogram."}, "ybins": {"val_types": "dictionary-like", "required": false, "type": "object", "description": "A dictionary-like object explaining how the bins should be created in the x direction for this histogram."}, "nbinsx": {}, "nbinsy": {}, "histnorm": {}, "showlegend": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Toggle whether or not this trace will show up in the legend."}, "xaxis": {"val_types": "string: 'x1' | 'x2' | 'x3' | etc.", "required": false, "type": "plot_info", "description": "This key determines which xaxis the x coordinates in this trace will reference in the figure. 'x' references layout['xaxis'] and 'x2' references layout['xaxis2']. 'x1' will always refer to layout['xaxis'] or layout['xaxis1'], they are the same."}, "yaxis": {"val_types": "string: 'y1' | 'y2' | 'y3' | etc.", "required": false, "type": "plot_info", "description": "This key determines which yaxis the y coordinates in this trace will reference in the figure. 'y' references layout['yaxis'] and 'y2' references layout['yaxis2']. 'y1' will always refer to layout['yaxis'] or layout['yaxis1'], they are the same."}, "visible": {"val_types": "bool: True | False", "required": false, "type": "plot_info", "description": "Toggles whether this will actually be visible in the rendered figure."}, "stream": {"val_types": "dictionary-like", "required": false, "type": "plot_info", "description": "The stream dict that initializes traces as writable-streams, for use with the real-time streaming API. See examples here:\nhttp://nbviewer.ipython.org/github/plotly/Streaming-Demos"}, "type": {"val_types": "histogram2d", "required": true, "type": "plot_info", "description": "Plotly identifier for this data's trace type. This defines how this data dictionary will be handled."}}, "annotation": {"x": {"val_types": "number", "required": false, "type": "plot_info", "description": "The x coordinate of the annotation location."}, "y": {"val_types": "number", "required": false, "type": "plot_info", "description": "The y coordinate of the annotation location."}, "text": {"val_types": "string", "required": false, "type": "plot_info", "description": "The text note that will be added with this annotation."}, "bordercolor": {"val_types": "str describing color", "required": false, "type": "style", "examples": ["'green'", "'rgb(0, 255, 0)'", "'rgba(0, 255, 0, 0.3)'", "'hsl(120,100%,50%)'", "'hsla(120,100%,50%,0.3)'"], "description": "The color of the enclosing boarder of this annotation."}, "borderwidth": {"val_types": "number", "required": false, "type": "style", "description": "The width of the boarder enclosing this annotation"}, "borderpad": {"val_types": "number: x in [0, 10]", "required": false, "type": "style", "description": "The amount of space (padding) between the text and the enclosing boarder."}, "bgcolor": {"val_types": "str describing color", "required": false, "type": "style", "examples": ["'green'", "'rgb(0, 255, 0)'", "'rgba(0, 255, 0, 0.3)'", "'hsl(120,100%,50%)'", "'hsla(120,100%,50%,0.3)'"], "description": "The background (bg) color for this annotation."}, "xref": {"val_types": "string: 'paper' | 'x1' | 'x2' | 'x3' | etc.", "required": false, "type": "plot_info", "description": "This defines what the x coordinate for this annotation *refers* to. If you reference an axis, e.g., 'x2', the annotation will move with pan-and-zoom to stay fixed to this point. If you reference the 'paper', it remains fixed regardless of pan-and-zoom."}, "yref": {"val_types": "string: 'paper' | 'y1' | 'y2' | 'y3' | etc.", "required": false, "type": "plot_info", "description": "This defines what the x coordinate for this annotation *refers* to. If you reference an axis, e.g., 'y2', the annotation will move with pan-and-zoom to stay fixed to this point. If you reference the 'paper', it remains fixed regardless of pan-and-zoom."}, "showarrow": {"val_types": "bool: True | False", "required": false, "type": "plot_info", "description": "Show the arrow associated with this annotation."}, "arrowwidth": {}, "arrowcolor": {}, "arrowhead": {}, "arrowsize": {}, "tag": {}, "font": {"val_types": "dictionary-like", "required": false, "type": "object"}, "opacity": {"val_types": "number: x in [0, 1]", "required": false, "type": "style", "description": "Sets the opacity, or transparency, of this object. Also known as the alpha channel of colors, if the object's color is given in terms of 'rgba', this does not need to be defined."}, "align": {"val_types": "string: 'left' | 'center' | 'right'", "required": false, "type": "plot_info", "description": "The alignment of the text in the annotation."}, "xanchor": {"required": false, "type": "plot_info"}, "yanchor": {"required": false, "type": "plot_info"}, "ay": {}, "ax": {}, "xatype": {}, "yatype": {}, "ref": {}}, "colorbar": {}, "error_y": {"array": {}, "color": {}, "opacity": {}, "thickness": {}, "traceref": {}, "type": {}, "visible": {}, "width": {}}, "figure": {"data": {"required": false, "type": "object"}, "layout": {"required": false, "type": "object"}}, "font": {"family": {"required": false, "type": "style", "description": "Setting for the font family."}, "size": {"val_types": "number", "required": false, "type": "style", "description": "Setting for the font size."}, "color": {"val_types": "str describing color", "required": false, "type": "style", "examples": ["'green'", "'rgb(0, 255, 0)'", "'rgba(0, 255, 0, 0.3)'", "'hsl(120,100%,50%)'", "'hsla(120,100%,50%,0.3)'"], "description": "Color of the text."}}, "layout": {"title": {"type": "plot_info"}, "xaxis": {"type": "object"}, "yaxis": {"type": "object"}, "legend": {"type": "object"}, "width": {"type": "style"}, "height": {"type": "style"}, "categories": {"type": "plot_info"}, "needsEndSpacing": {}, "autosize": {"type": "style"}, "margin": {"type": "object"}, "paper_bgcolor": {"type": "style"}, "plot_bgcolor": {"type": "style"}, "barmode": {"type": "plot_info"}, "bargap": {"type": "plot_info"}, "bargroupgap": {"type": "plot_info"}, "boxmode": {"type": "plot_info"}, "boxgap": {"type": "plot_info"}, "boxgroupgap": {"type": "plot_info"}, "font": {"type": "object"}, "titlefont": {"type": "object"}, "dragmode": {}, "hovermode": {}, "separators": {}, "labeloffset": {}, "orientation": {}, "direction": {}, "tickcolor": {}, "minortickcolor": {}, "defaultcolorrange": {}, "hidesources": {}, "showlegend": {"type": "plot_info"}, "annotations": {"type": "object"}, "bardir": {}, "smith": {}}, "legend": {"x": {"type": "plot_info"}, "y": {"type": "plot_info"}, "bgcolor": {"type": "style"}, "bordercolor": {"type": "style"}, "borderwidth": {"type": "style"}, "font": {"type": "object"}, "showlegend": {}, "traceorder": {"type": "plot_info"}, "xref": {"type": "plot_info"}, "yref": {"type": "plot_info"}, "xanchor": {"type": "plot_info"}, "yanchor": {"type": "plot_info"}}, "line": {"dash": {"type": "style"}, "color": {"type": "style"}, "width": {"type": "style"}, "thickness": {}, "opacity": {"type": "style"}, "smoothing": {"type": "style", "description": "Only applies to contours"}}, "margin": {"l": {"type": "style"}, "r": {"type": "style"}, "b": {"type": "style"}, "t": {"type": "style"}, "pad": {"type": "style"}, "autoexpand": {"type": "style"}}, "marker": {"symbol": {"required": false, "type": "style", "description": "The symbol that is drawn on the plot for each marker."}, "line": {"val_types": "Line object | dict", "required": false, "type": "object", "description": "A dict-like object describing the line belonging to the marker."}, "size": {"val_types": "number", "required": false, "type": "style", "description": "The size of the marker to be drawn."}, "sizemode": {}, "sizeref": {}, "color": {"type": "style"}, "opacity": {"type": "style"}}, "stream": {}, "xaxis": {"title": {}, "domain": {"val_types": "number array of length 2", "required": false, "type": "plot_info", "description": "Sets the domain of this axis. The available space for this axis to live in is from 0 to 1."}, "range": {"val_types": "number array of length 2", "required": false, "type": "plot_info", "examples": [[-13, 20], [0, 1]], "description": "Defines the start and end point for the axis."}, "type": {"val_types": "string: linear | log", "required": false, "type": "plot_info", "description": "Defines format of the axis."}, "showline": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Defines whether or not to show this axis line."}, "mirror": {}, "linecolor": {"val_types": "str describing color", "required": false, "type": "style", "examples": ["'green'", "'rgb(0, 255, 0)'", "'rgba(0, 255, 0, 0.3)'", "'hsl(120,100%,50%)'", "'hsla(120,100%,50%,0.3)'"], "description": "Defines the axis line color."}, "linewidth": {"val_types": "number", "required": false, "type": "style", "description": "Sets the width of the axis line."}, "tick0": {"val_types": "number", "required": false, "type": "plot_info", "description": "Sets the starting point of the axis."}, "dtick": {"val_type": "number", "required": false, "type": "style", "description": "Sets the difference between ticks on this axis."}, "ticks": {"requried": false, "val_types": "string: 'inside' | 'outside' | '' (Empty str for NONE)", "type": "plot_info", "description": "Sets format of tick visibility."}, "ticklen": {"val_types": "number", "required": false, "type": "style", "description": "Sets the length of the tick lines."}, "tickcolor": {"val_types": "str describing color", "required": false, "type": "style", "description": "Sets the color of the tick lines."}, "tickwidth": {"val_types": "number: x > 0", "required": false, "type": "style", "description": "Sets the width of the tick lines."}, "nticks": {"val_types": "number", "required": false, "type": "style", "description": "Sets the number of ticks to appear on the axis."}, "showticklabels": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Show/Hide the axis tick labels."}, "tickangle": {"val_types": "number: x in [-90, 90]", "required": false, "type": "style", "description": "Sets the angle of the ticks in degrees."}, "exponentformat": {"required": false, "type": "style"}, "showexponent": {"required": false, "type": "style"}, "showgrid": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Show/Hide grid for the axis."}, "gridcolor": {"val_types": "str describing color", "required": false, "type": "style", "examples": ["'green'", "'rgb(0, 255, 0)'", "'rgba(0, 255, 0, 0.3)'", "'hsl(120,100%,50%)'", "'hsla(120,100%,50%,0.3)'"], "description": "Sets the axis grid color. Any HTML specified color is accepted."}, "gridwidth": {"requried": false, "val_types": "number: x > 0", "type": "style", "description": "Sets the grid width."}, "autorange": {"val_types": "bool: True | False", "required": false, "type": "plot_info", "description": "Toggle whether to let plotly autorange the axis."}, "rangemode": {"val_types": "string: 'normal' | 'tozero' | 'nonnegative'", "required": false, "type": "plot_info"}, "autotick": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Toggle axis autoticks."}, "zeroline": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Show/Hide an additional zeroline for this axis."}, "zerolinecolor": {"val_types": "str describing color", "required": false, "type": "style", "examples": ["'green'", "'rgb(0, 255, 0)'", "'rgba(0, 255, 0, 0.3)'", "'hsl(120,100%,50%)'", "'hsla(120,100%,50%,0.3)'"], "description": "Set the color of this axis' zeroline."}, "zerolinewidth": {"val_types": "number: x > 0", "required": false, "type": "style", "description": "Sets the width of this axis' zeroline."}, "titlefont": {"val_types": "dictionary-like", "required": false, "type": "object", "description": "A dictionary for configuring the axis title font."}, "tickfont": {"val_types": "dictionary-like", "required": false, "type": "object", "description": "A dictionary for configuring the tick font."}, "overlaying": {}, "position": {}, "anchor": {}, "unit": {}, "tmin": {}, "tmax": {}, "b": {}, "m": {}, "tickround": {}, "tickexponent": {}, "side": {}, "color": {}, "drange": {}, "r0": {}}, "xbins": {"start": {}, "end": {}, "size": {}}, "yaxis": {"title": {}, "domain": {"val_types": "number array of length 2", "required": false, "type": "plot_info", "description": "Sets the domain of this axis. The available space for this axis to live in is from 0 to 1."}, "range": {"val_types": "number array of length 2", "required": false, "type": "plot_info", "examples": [[-13, 20], [0, 1]], "description": "Defines the start and end point for the axis."}, "type": {"val_types": "string: linear | log", "required": false, "type": "plot_info", "description": "Defines format of the axis."}, "showline": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Defines whether or not to show this axis line."}, "mirror": {}, "linecolor": {"val_types": "str describing color", "required": false, "type": "style", "examples": ["'green'", "'rgb(0, 255, 0)'", "'rgba(0, 255, 0, 0.3)'", "'hsl(120,100%,50%)'", "'hsla(120,100%,50%,0.3)'"], "description": "Defines the axis line color."}, "linewidth": {"val_types": "number", "required": false, "type": "style", "description": "Sets the width of the axis line."}, "tick0": {"val_types": "number", "required": false, "type": "plot_info", "description": "Sets the starting point of the axis."}, "dtick": {"val_type": "number", "required": false, "type": "style", "description": "Sets the difference between ticks on this axis."}, "ticks": {"requried": false, "val_types": "string: 'inside' | 'outside' | '' (Empty str for NONE)", "type": "plot_info", "description": "Sets format of tick visibility."}, "ticklen": {"val_types": "number", "required": false, "type": "style", "description": "Sets the length of the tick lines."}, "tickcolor": {"val_types": "str describing color", "required": false, "type": "style", "description": "Sets the color of the tick lines."}, "tickwidth": {"val_types": "number: x > 0", "required": false, "type": "style", "description": "Sets the width of the tick lines."}, "nticks": {"val_types": "number", "required": false, "type": "style", "description": "Sets the number of ticks to appear on the axis."}, "showticklabels": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Show/Hide the axis tick labels."}, "tickangle": {"val_types": "number: x in [-90, 90]", "required": false, "type": "style", "description": "Sets the angle of the ticks in degrees."}, "exponentformat": {"required": false, "type": "style"}, "showexponent": {"required": false, "type": "style"}, "showgrid": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Show/Hide grid for the axis."}, "gridcolor": {"val_types": "str describing color", "required": false, "type": "style", "examples": ["'green'", "'rgb(0, 255, 0)'", "'rgba(0, 255, 0, 0.3)'", "'hsl(120,100%,50%)'", "'hsla(120,100%,50%,0.3)'"], "description": "Sets the axis grid color. Any HTML specified color is accepted."}, "gridwidth": {"requried": false, "val_types": "number: x > 0", "type": "style", "description": "Sets the grid width."}, "autorange": {"val_types": "bool: True | False", "required": false, "type": "plot_info", "description": "Toggle whether to let plotly autorange the axis."}, "rangemode": {"val_types": "string: 'normal' | 'tozero' | 'nonnegative'", "required": false, "type": "plot_info"}, "autotick": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Toggle axis autoticks."}, "zeroline": {"val_types": "bool: True | False", "required": false, "type": "style", "description": "Show/Hide an additional zeroline for this axis."}, "zerolinecolor": {"val_types": "str describing color", "required": false, "type": "style", "examples": ["'green'", "'rgb(0, 255, 0)'", "'rgba(0, 255, 0, 0.3)'", "'hsl(120,100%,50%)'", "'hsla(120,100%,50%,0.3)'"], "description": "Set the color of this axis' zeroline."}, "zerolinewidth": {"val_types": "number: x > 0", "required": false, "type": "style", "description": "Sets the width of this axis' zeroline."}, "titlefont": {"val_types": "dictionary-like", "required": false, "type": "object", "description": "A dictionary for configuring the axis title font."}, "tickfont": {"val_types": "dictionary-like", "required": false, "type": "object", "description": "A dictionary for configuring the tick font."}, "overlaying": {}, "position": {}, "anchor": {}, "unit": {}, "tmin": {}, "tmax": {}, "b": {}, "m": {}, "tickround": {}, "tickexponent": {}, "side": {}, "color": {}, "drange": {}, "r0": {}}, "ybins": {"start": {}, "end": {}, "size": {}}, "contours": {"start": {}, "end": {}, "size": {}, "coloring": {}, "showlines": {}}}